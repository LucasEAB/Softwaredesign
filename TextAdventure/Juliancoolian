using System;
using System.Collections.Generic;

namespace TextAdventure
{
    class Program
    {
        static void Main(string[] args)
        {
           /* List<Item> Items = new List<Item>();
    
            Items.Add(new Item{name="Bier"});
            Items.Add(new Item{name="Brezel"});
            
            Items.Add(new Item{name="Pizza"});
            Items.Add(new Item{name="Espresso"});
            
            Items.Add(new Item{name="Tapas"});
            Items.Add(new Item{name="Cerveza"});
            
            Items.Add(new Item{name="Baguette"});
            Items.Add(new Item{name="Wine"});

            Items.Add(new Item{name="Vodka"});
            Items.Add(new Item{name="Matrjoschka"});*/

            Room r1 = new Room{name= "Germany"};
            Room r2= new Room{name = "France"};
            Room r3= new Room{name = "Russia"};
            Room r4= new Room{name = "Italy"};
            Room r5= new Room{name = "Spain"};

            r1.west = r2;
            r1.east = r3;
            r1.south = r4;

            r2.east = r1;
            r2.south = r5;

            r3.west = r1;
            r3.south = r4;

            r4.west = r5;
            r4.north = r1;

            r5.north = r2;
            r5.east = r4;

            r1.RoomItems.Add(new Item{name="Bier"});
            r1.RoomItems.Add(new Item{name="Brezel"});
            
            r2.RoomItems.Add(new Item{name="Baguette"});
            r2.RoomItems.Add(new Item{name="Wine"});

            r3.RoomItems.Add(new Item{name="Wodka"});
            r3.RoomItems.Add(new Item{name="Matruschka"});
            
            r4.RoomItems.Add(new Item{name="Pizza"});
            r4.RoomItems.Add(new Item{name="Espresso"});
            
            r5.RoomItems.Add(new Item{name="Tapas"});
            r5.RoomItems.Add(new Item{name="Cerveza"});


            Player p1 = new Player{name="Ju"};
            p1.position = r1;

            string input = ""; 
            while (input != "q"){ 
                show(p1);
                input = Console.ReadLine(); 
                
                try{
                    if (input != "q") {
                        switch(input) {
                            case "q":
                                break;
                            case "l":
                                show(p1);
                                break;
                            case "i":
                                p1.inventory();
                                break;
                            case "c":
                                commands();
                                break;    
                            case "d":
                                drop(p1);
                                break;    
                            case "t":
                                take(p1);
                                break;    
                            case "n":
                                p1.position = p1.position.gonorth();
                                break;
                            case "e":
                                p1.position=p1.position.goeast();
                                break;
                            case "s":
                                p1.position=p1.position.gosouth();
                                break;
                            case "w":
                                p1.position=p1.position.gowest();
                                break;
                            default:
                                Console.WriteLine("Go to an other direction.");
                                break;
                        }
                    }

                } catch(Exception){
                     Console.WriteLine("Please enter n, s, w or e ");
                    }    
            }
        }
        static void show(Player p)
        {
            Console.WriteLine("Sie befinden sich in " +p.position.name +" Geben Sie north(n), east(e), west(w) oder south(s) ein um sich zu bewegen.");
            p.position.look();
            
        }
        static void take(Player p)
        {
            Console.WriteLine("Welches Item wollen Sie?");
            string item = Console.ReadLine();
            Item takeItem = p.position.take(item);
            p.insert(takeItem);
            //p.inventory();
        }
        static void drop(Player p)
        {
            Console.WriteLine("Welches Item wollen Sie ablegen?");
            string item = Console.ReadLine();
           
            Item dropItem = p.delete(item);
            p.position.drop(dropItem);
            //p.inventory();
        }
        static void commands(){
            Console.WriteLine("commands(c), look(l), inventory(i), take(t) item, drop(d) item, quit(q)");
        }

    }

    class Room{
        public List<Item> RoomItems = new List<Item>();
        public string name;
        public   Room north ; 
        public  Room south; 
        public  Room west; 
        public  Room east; 


        
        public Room gonorth(){
            if(north == null){
                Console.WriteLine("Diesen Weg gibt es nicht"); 
                return this;
            }
            return north;
        }
        public Room goeast(){
            if(east == null){
                Console.WriteLine("Diesen Weg gibt es nicht"); 
                return this;
            }
            return east;
        }
        public Room gowest(){
            if(west == null){
                Console.WriteLine("Diesen Weg gibt es nicht"); 
                return this;
            }
            return west;
        }
        public Room gosouth(){
            if(south == null){
                Console.WriteLine("Diesen Weg gibt es nicht"); 
                return this;
            }
            return south;
        }
        
        public Item take (string item){
          Item take = null;
           for(int i=0; i < RoomItems.Count ;i++){
               if(RoomItems[i].name == item){
                   take = RoomItems[i];
                   RoomItems.Remove(RoomItems[i]);
                    Console.WriteLine("Sie haben " +item +" erfolgreich hinzugefÃ¼gt.");
               }
            }
            return take;
        }
        
         public void drop (Item item){
          
                    RoomItems.Add(item);
                    Console.WriteLine("Sie haben " +item +" erfolgreich abgelegt.");
        }

        public void look(){
            for(int i=0; i<RoomItems.Count; i++){
                 Console.WriteLine(RoomItems[i].name);
            }
        }
       

    }
    class Item{
        public string name;
    }
    class Player{
        public string name;
        public List<Item> PlayerItems = new List<Item>();


        public Room position;
        public void inventory(){
            for(int i=0; i<PlayerItems.Count; i++){
                Console.WriteLine(PlayerItems[i].name);
            }
        }
        public void insert(Item item){
            PlayerItems.Add(item);
        }
        public Item delete(string item){
            Item drop = null;
            for(int i=0; i < PlayerItems.Count ;i++){
                if(PlayerItems[i].name == item){
                        drop = PlayerItems[i]; 
                        PlayerItems.Remove(PlayerItems[i]);
                }
            }
            return drop;
        }
    }

    class Enemy{

        public void look(){

        }
    }
}